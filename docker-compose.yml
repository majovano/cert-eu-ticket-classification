services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: cert_eu_postgres
    environment:
      POSTGRES_DB: cert_eu_db
      POSTGRES_USER: cert_user
      POSTGRES_PASSWORD: cert_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cert_user -d cert_eu_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: cert_eu_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://cert_user:cert_password@postgres:5432/cert_eu_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./code:/app/code:ro
      - ./backend/test_predictions.jsonl:/app/test_predictions.jsonl:ro
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cert_eu_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data: